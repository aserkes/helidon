/*
 * OpenAPI Helidon Quickstart
 * This is a sample for Helidon Quickstart project.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.api;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.ws.rs.core.Response;
import org.openapitools.server.model.Message;

import jakarta.ws.rs.*;


import java.io.InputStream;
import java.util.Map;
import java.util.List;
import java.util.concurrent.atomic.AtomicReference;

import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

@ApplicationScoped
@Path("/greet")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaHelidonServerCodegen", date = "2022-10-25T09:58:58.439110277+02:00[Europe/Prague]")
public class MessageServiceImpl implements MessageService {

    private final AtomicReference<Message> defaultMessage = new AtomicReference<>();

    public MessageServiceImpl() {
        Message message = new Message();
        message.setMessage("World");
        message.setGreeting("Hello");
        defaultMessage.set(message);
    }

    @GET
    @Produces({ "application/json" })
    public Message getDefaultMessage() {
        return defaultMessage.get();
    }

    @GET
    @Path("/{name}")
    @Produces({ "application/json" })
    public Message getMessage(@PathParam("name") String name) {
        defaultMessage.get().setMessage(name);
        return defaultMessage.get();
    }

    @PUT
    @Path("/greeting")
    @Consumes({ "application/json" })
    public void updateGreeting(@Valid @NotNull Message message) {
        defaultMessage.set(message);
        Response.status(Response.Status.NO_CONTENT).build();
    }
}
